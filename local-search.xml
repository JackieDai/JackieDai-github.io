<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>lua-luarocks在Project中的应用</title>
    <link href="/2023/12/23/004lua/lua-luarocks%E5%9C%A8Project%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    <url>/2023/12/23/004lua/lua-luarocks%E5%9C%A8Project%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p><a href="https://martin-fieber.de/blog/goodbye-snake-i-go-to-the-moon/">Reference</a></p><h2 id="Install-luarocks"><a href="#Install-luarocks" class="headerlink" title="Install luarocks"></a>Install luarocks</h2><p><strong>mission</strong>: use <code>luarocks</code> to manage third libs in lua project.</p><blockquote><p>Guarantee the <code>luarocks</code> have been installed in your mac. if not , using the follow command.</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">$ <span class="hljs-keyword">brew </span><span class="hljs-keyword">install </span>luarocks<br></code></pre></td></tr></table></figure></blockquote><p>Generally, the libs installed using <code>luarocks</code> will locate at global position. <del>But in real situation, we’d like install lib is each Project locally not in global.</del>  But in a real-world scenario, we prefer to install libs locally for each project rather than globally.</p><h2 id="Exercise"><a href="#Exercise" class="headerlink" title="Exercise"></a>Exercise</h2><blockquote><p>I will install all packages inside a <code>lua_modules</code> folder <u>in the root of a project</u>, using the <code>--tree</code> option of the LuaRocks CLI. As an example, installing the <a href="https://luarocks.org/modules/kikito/inspect">inspect</a> package.</p></blockquote><ol><li><p><code>cd</code> the root of your Project.</p></li><li><p>excute <code>luarocks install --tree=lua_modules inspect</code></p><p><img src="https://raw.githubusercontent.com/JackieDai/blogAssets/main/202312230851976.png"></p><blockquote><p><code>tree=lua_modules</code> means the libs will be installed at that folder.</p></blockquote></li><li><p>create <code>setup.lua</code> and <code>test.lua</code> files.</p><ol><li><p>we need make configrations for <code>pageage</code> in <code>setup.lua</code> file</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs lua"><span class="hljs-comment">-- setup.lua</span><br><span class="hljs-keyword">local</span> version = <span class="hljs-built_in">_VERSION</span>:<span class="hljs-built_in">match</span>(<span class="hljs-string">&quot;%d+%.%d+&quot;</span>)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;version&#x27;</span>,version) <span class="hljs-comment">-- version5.4</span><br><br><span class="hljs-built_in">package</span>.<span class="hljs-built_in">path</span> = <span class="hljs-string">&#x27;lua_modules/share/lua/&#x27;</span><br>  .. version ..<br>  <span class="hljs-string">&#x27;/?.lua;lua_modules/share/lua/&#x27;</span><br>  .. version ..<br>  <span class="hljs-string">&#x27;/?/init.lua;&#x27;</span><br>  .. <span class="hljs-built_in">package</span>.<span class="hljs-built_in">path</span><br><span class="hljs-built_in">package</span>.<span class="hljs-built_in">cpath</span> = <span class="hljs-string">&#x27;lua_modules/lib/lua/&#x27;</span><br>  .. version ..<br>  <span class="hljs-string">&#x27;/?.so;&#x27;</span> .. <span class="hljs-built_in">package</span>.<span class="hljs-built_in">cpath</span><br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;package.path == &#x27;</span>,<span class="hljs-built_in">package</span>.<span class="hljs-built_in">path</span>) <span class="hljs-comment">-- package.path ==lua_modules/share/lua/5.4/?.lua;lua_modules/share/lua/5.4/?/init.lua;/usr/local/share/lua/5.4/?.lua;/usr/local/share/lua/5.4/?/init.lua;/usr/local/lib/lua/5.4/?.lua;/usr/local/lib/lua/5.4/?/init.lua;./?.lua;./?/init.lua</span><br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;package.cpath == &#x27;</span>,<span class="hljs-built_in">package</span>.<span class="hljs-built_in">cpath</span>) <span class="hljs-comment">-- package.cpath == lua_modules/lib/lua/5.4/?.so;/usr/local/lib/lua/5.4/?.so;/usr/local/lib/lua/5.4/loadall.so;./?.so</span><br></code></pre></td></tr></table></figure></li><li><p>test the lib in <code>test.lua</code>file</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs lua"><span class="hljs-comment">--[[</span><br><span class="hljs-comment">    <span class="hljs-doctag">NOTE:</span></span><br><span class="hljs-comment">    make sure setup.lua must be loaded. or `require &quot;inspect&quot;` cause error!</span><br><span class="hljs-comment">]]</span><br><br><span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;setup&quot;</span>)<br><br><span class="hljs-keyword">local</span> inspect = <span class="hljs-built_in">require</span> <span class="hljs-string">&quot;inspect&quot;</span><br><span class="hljs-keyword">local</span> a = &#123;<span class="hljs-number">1</span>, <span class="hljs-number">2</span>&#125;<br><br><span class="hljs-built_in">print</span>(inspect(a))<br><br><span class="hljs-comment">--[[</span><br><span class="hljs-comment">result:</span><br><span class="hljs-comment">&#123; 1, 2 &#125;</span><br><span class="hljs-comment">]]</span><br></code></pre></td></tr></table></figure></li></ol></li><li><p>the demo dir as follows:</p><p><img src="https://raw.githubusercontent.com/JackieDai/blogAssets/main/202312230910092.png"></p></li></ol><blockquote><p>If you install libs locally, there is nothing when you excute <code>luarocks list</code>;</p><p><img src="https://raw.githubusercontent.com/JackieDai/blogAssets/main/202312230913600.png"></p><p><del>But if you install globally, there are the libs you installed before when excute that command.</del></p><p>But if you install globally, the libraries you installed before will be available when executing that command.</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Lua</category>
      
    </categories>
    
    
    <tags>
      
      <tag>tools</tag>
      
      <tag>lua</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>lua-优秀博客</title>
    <link href="/2023/12/23/004lua/lua-%E4%BC%98%E7%A7%80%E5%8D%9A%E5%AE%A2/"/>
    <url>/2023/12/23/004lua/lua-%E4%BC%98%E7%A7%80%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="Lua-project-setup-with-LuaRocks"><a href="#Lua-project-setup-with-LuaRocks" class="headerlink" title="Lua project setup with LuaRocks"></a>Lua project setup with LuaRocks</h2><p><a href="https://martin-fieber.de/blog/lua-project-setup-with-luarocks/">参考链接</a></p><blockquote><p>这个blog里面还有其他关于 lua 的相关介绍</p></blockquote><hr>]]></content>
    
    
    <categories>
      
      <category>Lua</category>
      
    </categories>
    
    
    <tags>
      
      <tag>tools</tag>
      
      <tag>lua</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>计算markdown标题数量&amp;给markdown注入内容</title>
    <link href="/2023/12/21/003tools/001_caculate_H_count/"/>
    <url>/2023/12/21/003tools/001_caculate_H_count/</url>
    
    <content type="html"><![CDATA[<p>为了统计<code>markdown</code> 文件中的标题的数量，使用python 如下</p><blockquote><p>下面的代码有两个主要功能</p><ul><li>统计markdown文件的标题数量</li><li>给markdown文件注入<code>hexo</code>blog 标题的格式</li></ul><p>代码中的路径内容对应</p><p><img src="https://raw.githubusercontent.com/JackieDai/blogAssets/main/202312211502789.png"></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 正则匹配相关</span><br><span class="hljs-keyword">import</span> re<br><span class="hljs-comment"># 系统库</span><br><span class="hljs-keyword">import</span> os<br><span class="hljs-comment"># 日期</span><br><span class="hljs-keyword">from</span> datetime <span class="hljs-keyword">import</span> datetime<br><span class="hljs-comment"># 时间</span><br><span class="hljs-keyword">import</span> time<br><br><span class="hljs-comment"># 获取文件夹下的子文件夹</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">list_subdirectories</span>(<span class="hljs-params">root_dir</span>):<br>    subdirectories = [d <span class="hljs-keyword">for</span> d <span class="hljs-keyword">in</span> os.listdir(root_dir) <br>                      <span class="hljs-keyword">if</span> os.path.isdir(os.path.join(root_dir, d)) <br>                      <span class="hljs-keyword">and</span> <span class="hljs-keyword">not</span> d.startswith(<span class="hljs-string">&#x27;.&#x27;</span>)  <span class="hljs-comment"># 排除隐藏文件夹</span><br>                      <span class="hljs-keyword">and</span> d.lower() != <span class="hljs-string">&#x27;unfamiliarwords&#x27;</span>]  <span class="hljs-comment"># 排除名为 UnfamiliarWords 的文件夹</span><br><br>    subdirectories.sort()<br>    <span class="hljs-keyword">return</span> subdirectories<br><br><span class="hljs-comment"># 获取.md 文件的文件名称</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">list_md_file</span>(<span class="hljs-params">file_path</span>):<br>    md_files = [f <span class="hljs-keyword">for</span> f <span class="hljs-keyword">in</span> os.listdir(file_path) <span class="hljs-keyword">if</span> f.endswith(<span class="hljs-string">&quot;.md&quot;</span>)]<br>    md_files.sort()<br>    <span class="hljs-keyword">return</span> md_files<br><br><span class="hljs-comment"># 计算md文件的标题数量</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">count_markdown_headings</span>(<span class="hljs-params">file_path</span>):<br>    <span class="hljs-comment"># 读取 Markdown 文件内容</span><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(file_path, <span class="hljs-string">&#x27;r&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>        content = file.read()<br><br>    <span class="hljs-comment"># 使用正则表达式匹配 Markdown 标题</span><br>    heading_pattern = re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">r&#x27;^#+\s&#x27;</span>, re.MULTILINE)<br>    matches = heading_pattern.findall(content)<br><br>    <span class="hljs-comment"># 统计各级别标题的数量</span><br>    heading_count = &#123;&#125;<br>    <span class="hljs-keyword">for</span> <span class="hljs-keyword">match</span> <span class="hljs-keyword">in</span> matches:<br>        level = <span class="hljs-keyword">match</span>.count(<span class="hljs-string">&#x27;#&#x27;</span>)<br>        heading_count[level] = heading_count.get(level, <span class="hljs-number">0</span>) + <span class="hljs-number">1</span><br><br>    <span class="hljs-comment"># 打印统计结果</span><br>    result = []<br>    <span class="hljs-keyword">for</span> level, count <span class="hljs-keyword">in</span> heading_count.items():<br>        <span class="hljs-comment"># print(f&#x27;Level &#123;level&#125; headings: &#123;count&#125;&#x27;)</span><br>        info_dict = &#123;<br>            <span class="hljs-string">&quot;level&quot;</span>: level,<br>            <span class="hljs-string">&quot;headings&quot;</span>: count<br>        &#125;<br>        result.append(info_dict)<br>    <span class="hljs-keyword">return</span> result<br><br><br><span class="hljs-comment"># 注入内容</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">inject_content_to_markdown</span>(<span class="hljs-params">file_path, content_to_inject</span>):<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-comment"># 打开原始Markdown文件并读取内容</span><br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(file_path, <span class="hljs-string">&#x27;r&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>            original_content = file.read()<br><br>        <span class="hljs-comment"># 向内容开头注入新的内容</span><br>        new_content = <span class="hljs-string">f&quot;<span class="hljs-subst">&#123;content_to_inject&#125;</span>\n\n<span class="hljs-subst">&#123;original_content&#125;</span>&quot;</span><br><br>        <span class="hljs-comment"># 将修改后的内容写回Markdown文件</span><br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(file_path, <span class="hljs-string">&#x27;w&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>            file.write(new_content)<br><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;内容已成功注入到文件：<span class="hljs-subst">&#123;file_path&#125;</span>&quot;</span>)<br><br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;发生错误：<span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br><br><span class="hljs-comment"># 注入的内容</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">inject_content_func</span>(<span class="hljs-params">markdown_file_path, markdown_file_name</span>):<br><br>    time.sleep(<span class="hljs-number">1</span>)<br><br>    <span class="hljs-comment"># 获取当前时间</span><br>    current_time = datetime.now()<br><br>    markdown_file_name = markdown_file_name.split(<span class="hljs-string">&quot;.&quot;</span>)[<span class="hljs-number">0</span>]<br><br>    <span class="hljs-comment"># 格式化时间为字符串</span><br>    formatted_time = current_time.strftime(<span class="hljs-string">&quot;%Y-%m-%d %H:%M:%S&quot;</span>)<br>    <span class="hljs-comment"># 要注入的内容</span><br>    inject_content = <span class="hljs-string">f&#x27;&#x27;&#x27;---</span><br><span class="hljs-string">title: <span class="hljs-subst">&#123;markdown_file_name&#125;</span></span><br><span class="hljs-string">date: <span class="hljs-subst">&#123;formatted_time&#125;</span></span><br><span class="hljs-string">index_img: /img/richpoordad.png</span><br><span class="hljs-string">excerpt: The Part of <span class="hljs-subst">&#123;markdown_file_name&#125;</span> unfamiliar words</span><br><span class="hljs-string">tags: </span><br><span class="hljs-string">    - RichDadPoorDad</span><br><span class="hljs-string">categories: English</span><br><span class="hljs-string">---&#x27;&#x27;&#x27;</span><br>    <span class="hljs-built_in">print</span>(inject_content)<br>    inject_content_to_markdown(markdown_file_path, inject_content)<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    <span class="hljs-comment"># if u want to log ecah detail of secitons, just set the boolen value True</span><br>    should_log_detail = <span class="hljs-literal">False</span><br>    <span class="hljs-comment"># 指定文件夹路径</span><br>    folder_path = <span class="hljs-string">&#x27;/Users/lingxiao/RichDadAndPoorDad&#x27;</span><br>    <span class="hljs-comment"># 获取子文件夹列表</span><br>    subdirectories = list_subdirectories(folder_path)<br><br>    total_count = <span class="hljs-number">0</span><br><br>    <span class="hljs-comment"># 输出子文件夹名称</span><br>    <span class="hljs-keyword">for</span> subdir <span class="hljs-keyword">in</span> subdirectories:<br>        <span class="hljs-comment"># print(subdir)</span><br>        folder_sub_path = folder_path + <span class="hljs-string">&quot;/&quot;</span> + subdir<br><br>        subdir_count = <span class="hljs-number">0</span><br><br>        <br>        <span class="hljs-keyword">if</span> should_log_detail:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;===========&quot;</span>*<span class="hljs-number">5</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;subdir&#125;</span> section detail as follows:&quot;</span>)<br>       <br>        md_files = list_md_file(folder_sub_path)<br><br>        <span class="hljs-comment"># 打印文件名</span><br>        <span class="hljs-keyword">for</span> md_file <span class="hljs-keyword">in</span> md_files:<br>            whole_md_address = folder_sub_path + <span class="hljs-string">&quot;/&quot;</span> + md_file<br>            <span class="hljs-comment"># 给 md 文件注入 通用脚本  !!!!!!</span><br>            inject_content_func(whole_md_address,md_file)<br><br>            <span class="hljs-comment"># 计算每一个md文件的标题个数</span><br>            result = count_markdown_headings(whole_md_address)<br>            <span class="hljs-keyword">for</span> info_dict <span class="hljs-keyword">in</span> result:<br>                <span class="hljs-keyword">if</span> info_dict[<span class="hljs-string">&quot;level&quot;</span>] == <span class="hljs-number">2</span>:<br>                    word_count = info_dict[<span class="hljs-string">&quot;headings&quot;</span>]<br>                    total_count = total_count + word_count<br>                    subdir_count = subdir_count + word_count<br>                    <span class="hljs-keyword">if</span> should_log_detail:<br>                        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;\t<span class="hljs-subst">&#123;md_file&#125;</span> words count == <span class="hljs-subst">&#123;word_count&#125;</span>&#x27;</span>)<br><br>        log_str = <span class="hljs-string">f&quot;<span class="hljs-subst">&#123;subdir&#125;</span> words count == <span class="hljs-subst">&#123;subdir_count&#125;</span> \n&quot;</span><br>        <span class="hljs-keyword">if</span> should_log_detail:<br>            log_str = <span class="hljs-string">f&quot;---Total count:<span class="hljs-subst">&#123;subdir_count&#125;</span> \n&quot;</span><br>        <span class="hljs-built_in">print</span>(log_str)<br><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;RichDadAndPoorDad 总 数 == <span class="hljs-subst">&#123;total_count&#125;</span>\n&quot;</span>)    <br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>tools</tag>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>博客使用说明</title>
    <link href="/2023/12/20/000firstblog/hello-world/"/>
    <url>/2023/12/20/000firstblog/hello-world/</url>
    
    <content type="html"><![CDATA[<p>测试。git status….</p><p><a href="https://hexo.fluid-dev.com/docs/guide/">博客使用说明</a></p><p>使用 <a href="https://github.com/apps/utterances">utterances</a> 作为评论系统  <a href="https://www.jianshu.com/p/785d727810b3l">参考链接</a></p><p><img src="https://raw.githubusercontent.com/JackieDai/blogAssets/main/202312201801777.png"></p><p><img src="https://raw.githubusercontent.com/JackieDai/blogAssets/main/202312201802152.png"></p><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><p>[TOC]</p><h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>从上一个篇章，提到了<code>scheduleDAG</code> 这个方法比较重要，逻辑也相对复杂。接下来，我们抽丝剥茧，扒一扒内部到底是什么？首先先看外部调用</p><p><a href="file:///usr/local/Atlas/Documentation/atlas-groups/atlas-group-scheduler.html#scheduler-lifetime">先参考文档</a></p><blockquote><p>先解释下面代码中的dag 的意思</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs lua"><span class="hljs-keyword">local</span> dag = <span class="hljs-literal">nil</span><br><span class="hljs-keyword">if</span> <span class="hljs-built_in">next</span>(plugins) == <span class="hljs-literal">nil</span> <span class="hljs-keyword">then</span><br>    dag = Group.scheduler(deviceName)<br><span class="hljs-keyword">else</span><br>    dag = Group.scheduler(deviceName, plugins)<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><p>After the unit setup (device initialization and configuration), <strong>a scheduler(调度程序) is created to schedule(安排) actions to be executed</strong> within the device’s context. The code snippet below provides an example call to initialize the scheduler. **It’s important to note that only one scheduler can exist at a time per device.**（每个设备一次只能存在一个调度程序）</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lua">scheduler = Group.scheduler(device_name, plugin_table)<br></code></pre></td></tr></table></figure><p>由此可知 程序中<code>dag</code> 就是调度器。</p></blockquote><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs lua"><span class="hljs-comment">-- This function will schedule and execute the DAG. </span><br><span class="hljs-comment">-- It will use:</span><br><span class="hljs-comment">--deviceFT.scheduleDAG ;</span><br><span class="hljs-comment">--deviceFT.scheduleFinalDAG;</span><br><span class="hljs-comment">-- mergedPluginTable 包含 groupPlugin 和 devicePlugin</span><br><span class="hljs-comment">-- pluginNamesToUnmanageTable 在案例DEMO中，这个table == nil</span><br>gsmFT.executeTest = <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">(deviceFT, mergedPluginTable, pluginNamesToUnmanageTable)</span></span><br>    <span class="hljs-keyword">local</span> prevDAGResults = <span class="hljs-literal">nil</span><br>    <span class="hljs-keyword">local</span> iter = <span class="hljs-number">1</span><br>      <br>  <span class="hljs-comment">-- 是否结束每个Device的调度器，模式为false,表示不终结。每个Device一次只能有一个调度器</span><br>    <span class="hljs-keyword">local</span> isFinalDAGScheduledPerDevice = &#123;&#125;<br>  <span class="hljs-comment">-- 将isFinalDAGScheduledPerDevice 根据  Group.allDevices() ,以deviceName 为 key ,value 全部设置为 false</span><br>    <span class="hljs-keyword">for</span> _,deviceName <span class="hljs-keyword">in</span> <span class="hljs-built_in">ipairs</span>(Group.allDevices()) <span class="hljs-keyword">do</span> isFinalDAGScheduledPerDevice[deviceName] = <span class="hljs-literal">false</span> <span class="hljs-keyword">end</span><br>  <br><br>    <span class="hljs-keyword">repeat</span><br>        <span class="hljs-keyword">for</span> _,deviceName <span class="hljs-keyword">in</span> <span class="hljs-built_in">ipairs</span>(Group.allDevices()) <span class="hljs-keyword">do</span><br>      <span class="hljs-comment">-- 这里是一定会执行的</span><br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> isFinalDAGScheduledPerDevice[deviceName] <span class="hljs-keyword">then</span><br>        <span class="hljs-comment">-- 根据 deviceName 获取 Device 所有的插件</span><br>                <span class="hljs-keyword">local</span> plugins = mergedPluginTable[deviceName]<br>        <br>        <span class="hljs-comment">-- 这里dag 其实就是调度程序（scheduler）的意思</span><br>                <span class="hljs-keyword">local</span> dag = <span class="hljs-literal">nil</span><br>                <span class="hljs-keyword">if</span> <span class="hljs-built_in">next</span>(plugins) == <span class="hljs-literal">nil</span> <span class="hljs-keyword">then</span><br>                    dag = Group.scheduler(deviceName)<br>                <span class="hljs-keyword">else</span><br>                    dag = Group.scheduler(deviceName, plugins)<br>                <span class="hljs-keyword">end</span><br><br>        <span class="hljs-comment">-- 传入 参数，调用 自定义的scheduleDAG书写逻辑，来实现 任务调度，这里会有一个返回值，来标记调度状态[也即是绑定action是否成功]</span><br>                <span class="hljs-keyword">local</span> isDAGScheduled = deviceFT.scheduleDAG(iter, dag, deviceName, plugins, prevDAGResults)<br>        <br>                <span class="hljs-keyword">if</span> isDAGScheduled == <span class="hljs-literal">false</span> <span class="hljs-keyword">then</span><br>          <span class="hljs-comment">-- 如果安排调度事件失败那么结束</span><br>                    deviceFT.scheduleFinalDAG(dag, deviceName, plugins)<br>          <span class="hljs-comment">-- 标记结束调度设备</span><br>                    isFinalDAGScheduledPerDevice[deviceName] = <span class="hljs-literal">true</span><br>                <span class="hljs-keyword">end</span><br>            <span class="hljs-keyword">end</span><br>        <span class="hljs-keyword">end</span><br><br>    <span class="hljs-comment">-- 请求Group执行任务</span><br>        prevDAGResults = Group.<span class="hljs-built_in">execute</span>()<br><br>    <span class="hljs-comment">-- 要自增，在下一次循环的时候，需要作为 参数传递</span><br>        iter = iter + <span class="hljs-number">1</span><br>    <br>        <span class="hljs-keyword">local</span> allFinalDAGScheduled = <span class="hljs-literal">true</span><br>        <span class="hljs-keyword">for</span> _,isFinalDAGScheduled <span class="hljs-keyword">in</span> <span class="hljs-built_in">pairs</span>(isFinalDAGScheduledPerDevice) <span class="hljs-keyword">do</span><br>            allFinalDAGScheduled = allFinalDAGScheduled <span class="hljs-keyword">and</span> isFinalDAGScheduled<br>        <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">until</span> allFinalDAGScheduled<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><p>从上面的代码能够看出，循环体中的结束条件 <code>allFinalDAGScheduled</code> ,但是这个条件取决于<code>deviceFT.scheduleDAG()</code> 方法的返回值。</p><h1 id="ScheduleDAG"><a href="#ScheduleDAG" class="headerlink" title="ScheduleDAG"></a>ScheduleDAG</h1><p>内部源码如下:</p><blockquote><p>DEMO示例的代码中</p><ul><li>iter &#x3D;&#x3D; 1 表示调度 init</li><li>iter &#x3D;&#x3D; 2 表示调度main, 【不过在调度main之前要先校验 init 是否成功】</li></ul><p>同时 返回值 如果 是 <code>true</code> 表示外界调度的函数要继续循环，如果是返回<code>false</code> 表示外界调度的循环体还要继续执行</p></blockquote><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs lua"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">scheduleDAG</span><span class="hljs-params">(iter, dag, deviceName, mergedPluginTable, prevDAGResults)</span></span><br>    Log.LogInfo(<span class="hljs-string">&quot;lingxiao---scheduleDAG&quot;</span>)<br><br>  <span class="hljs-comment">-- enable am i ok check for Init and Main.csv, but not Teardown.csv.</span><br>  <span class="hljs-keyword">if</span> iter == <span class="hljs-number">1</span> <span class="hljs-keyword">then</span><br>    <span class="hljs-comment">-- enable amiok for Init.csv</span><br>    <span class="hljs-comment">-- dag.enableExitOnAmIOkay()</span><br>    <span class="hljs-comment">-- initialize for current test cycle</span><br>    prevGlobals[deviceName] = comFunc.clone(initGlobals)<br>    prevConditions[deviceName] = comFunc.clone(initConditions)<br><br>    <span class="hljs-keyword">if</span> additionalGlobals[deviceName] <span class="hljs-keyword">then</span><br>        <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> <span class="hljs-built_in">pairs</span>(additionalGlobals[deviceName]) <span class="hljs-keyword">do</span><br>            prevGlobals[deviceName][k] = v<br>        <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">end</span><br><br>    <span class="hljs-keyword">local</span> globals = prevGlobals[deviceName]<br>    <span class="hljs-keyword">local</span> conditions = prevConditions[deviceName]<br>    lastResolvableByDevice[deviceName] = runTests(currentInitTests, limits, globals,<br>                                                  conditions, <span class="hljs-string">&#x27;Init&#x27;</span>, dag, deviceName,<br>                                                  testNames[deviceName], mergedPluginTable)<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>  <span class="hljs-keyword">elseif</span> iter == <span class="hljs-number">2</span> <span class="hljs-keyword">then</span><br>    <span class="hljs-comment">-- enable amiok for Main.csv</span><br>    <span class="hljs-comment">-- dag.enableExitOnAmIOkay()</span><br>    <span class="hljs-comment">-- check result for Init.csv</span><br>    <span class="hljs-keyword">local</span> prevDAGFinished = checkDAGSuccessful(<span class="hljs-string">&#x27;Init&#x27;</span>, deviceName, prevDAGResults)<br>    <span class="hljs-keyword">if</span> prevDAGFinished == <span class="hljs-literal">true</span> <span class="hljs-keyword">then</span><br>        <span class="hljs-keyword">local</span> lastResolvable = lastResolvableByDevice[deviceName]<br>        <span class="hljs-keyword">if</span> lastResolvable <span class="hljs-keyword">then</span><br>            <span class="hljs-keyword">local</span> result = lastResolvable.overallResult()<br>            <span class="hljs-keyword">if</span> result == Group.overallResult.fail <span class="hljs-keyword">then</span><br>                Log.LogError(<span class="hljs-string">&#x27;Init.csv fails; skipping Main.csv and running Teardown.csv&#x27;</span>)<br>                <span class="hljs-comment">-- do not run Main.csv if Init.csv fails.</span><br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>            <span class="hljs-keyword">end</span><br>        <span class="hljs-keyword">end</span><br><br>        <span class="hljs-keyword">local</span> globals = prevGlobals[deviceName]<br>        <span class="hljs-keyword">local</span> conditions = prevConditions[deviceName]<br>        lastResolvableByDevice[deviceName] = runTests(currentMainTests, limits, globals,<br>                                                      conditions, <span class="hljs-string">&#x27;Main&#x27;</span>, dag, deviceName,<br>                                                      testNames[deviceName], mergedPluginTable)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-comment">-- do nothing here; already handled in checkDAGSuccessful</span><br>        <span class="hljs-comment">-- skip Main.csv, so return false to go to Teardown.csv</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>    <span class="hljs-keyword">end</span><br>  <span class="hljs-keyword">else</span><br>    <span class="hljs-comment">-- Do not enable amiok for Teardown.csv</span><br>    <span class="hljs-comment">-- check result for Main.csv</span><br>    checkDAGSuccessful(<span class="hljs-string">&#x27;Main&#x27;</span>, deviceName, prevDAGResults)<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>  <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h2><p>@lingxiao</p><p>analyse run test 方法</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Rich_Dad_Poor_Dad</title>
    <link href="/2023/12/20/002english/001richandpoordad/Rich-Dad-Poor-Dad/"/>
    <url>/2023/12/20/002english/001richandpoordad/Rich-Dad-Poor-Dad/</url>
    
    <content type="html"><![CDATA[<h2 id="Rich-Dad-Poor-Dad"><a href="#Rich-Dad-Poor-Dad" class="headerlink" title="Rich Dad Poor Dad"></a>Rich Dad Poor Dad</h2><p>Pls Click on <a href="https://www.yuque.com/jk-coder/pr14f1">RichDadPoorDad</a> for many unfamiliar words.</p><p><img src="https://raw.githubusercontent.com/JackieDai/blogAssets/main/richpoordad.png"></p>]]></content>
    
    
    <categories>
      
      <category>English</category>
      
    </categories>
    
    
    <tags>
      
      <tag>RichDadPoorDad</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
