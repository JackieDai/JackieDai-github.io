<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hindsight</title>
    <link href="/2023/12/20/Hindsight/"/>
    <url>/2023/12/20/Hindsight/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="commercial"><a href="#commercial" class="headerlink" title="commercial"></a>commercial</h2><blockquote><p><strong>&#x2F;kəˈmɜːrʃ(ə)l&#x2F;</strong><br>adj.商业的，商务的；商业化的，以获利为目的的；由广告商支付的；（化学制品）大量供应且纯度不高的</p><p>n.电视广告，电台广告</p><hr><p>词根词缀： com-共同 + -merc-商 + -ial形容词词尾</p></blockquote><h2 id="critical"><a href="#critical" class="headerlink" title="critical"></a>critical</h2><blockquote><p><strong>&#x2F;ˈkrɪtɪk(ə)l&#x2F;</strong></p><p>adj.批判的，爱挑剔的；极其重要的，关键的；严重的，危急的；病重的，重伤的；<strong>评论性的</strong>，评论家的；临界的</p><p>文章里 是 <strong>评论性 的</strong>，也指口碑</p></blockquote><h2 id="spend"><a href="#spend" class="headerlink" title="spend"></a>spend</h2><blockquote><p><strong>&#x2F;spend&#x2F;</strong></p><p>文章是<strong>度过</strong>的意思， 注意啊，这可不是 花费的意思</p><p>v.度过，花（时间）；花（钱），花费；消耗，用尽（精力等）</p><p>n.花费，开销</p><p>n.预算</p></blockquote><h2 id="album"><a href="#album" class="headerlink" title="album"></a>album</h2><blockquote><p>“这里不是 相册 的意思” 而是指 专辑的意思</p><p><strong>&#x2F;ˈælbəm&#x2F;</strong><br>n.唱片，专辑；相册，影集，集邮册</p></blockquote><h2 id="chart"><a href="#chart" class="headerlink" title="chart"></a>chart</h2><blockquote><p>“文中也不是图标的意思”，而是指 “排行榜”</p><p><strong>&#x2F;tʃɑːrt&#x2F;</strong><br>n.图表，曲线图；海图，星位图；排行榜</p><p>v.绘制；记录，跟踪；制定（行动计划）；进榜，上榜</p></blockquote><h5 id="It-was-an-immediate-commerical-and-critical-success-spending-27-weeks-at-the-top-of-the-albums-chart-in-the-UK-and-15-weeks-at-number-one-in-the-USA"><a href="#It-was-an-immediate-commerical-and-critical-success-spending-27-weeks-at-the-top-of-the-albums-chart-in-the-UK-and-15-weeks-at-number-one-in-the-USA" class="headerlink" title="It was an immediate commerical and critical success, spending 27 weeks at the top of the albums chart in the UK and 15 weeks at number one in the USA."></a>It was an immediate <strong>commerical</strong> and <strong>critical</strong> success, <strong>spending</strong> 27 weeks at the top of the <strong>albums</strong> <strong>chart</strong> in the UK and 15 weeks at number one in the USA.</h5><hr><h2 id="as-well-as"><a href="#as-well-as" class="headerlink" title="as well as"></a>as well as</h2><blockquote><p>和，以及，还有.</p><p>‘用于连接两个或更多的事物，表示它们都是同等重要的或同样存在的。’</p><p>She is good at singing as well as dancing.<br>她不仅擅长唱歌，还擅长跳舞。</p></blockquote><h5 id="It-won-four-Grammy-Awards-in-1968-as-well-as-Album-of-the-Year-–-the-first-rock-album-ever-to-receive-that-honor"><a href="#It-won-four-Grammy-Awards-in-1968-as-well-as-Album-of-the-Year-–-the-first-rock-album-ever-to-receive-that-honor" class="headerlink" title="It won four Grammy Awards in 1968 as well as Album of the Year – the first rock album ever to receive that honor."></a>It won four Grammy Awards in 1968 <strong>as well as</strong> Album of the Year – the first rock album ever to receive that honor.</h5><hr><h2 id="slip"><a href="#slip" class="headerlink" title="slip"></a>slip</h2><blockquote><p><strong>&#x2F;slɪp&#x2F;</strong></p><p>这个单词意思比较多，从两个方面来解析</p><ul><li>slip 滑</li><li>【滑倒；溜走；滑落，滑掉】</li><li>【下滑，下降，差错，疏漏】</li><li>slip 纸条，便条，小枝</li></ul><p>文中指 <strong>便条 纸条</strong>的 意思</p></blockquote><h5 id="A-few-rejection-slips-offered-comments-like-“You-do-not-know-what-you-are-talking-about”"><a href="#A-few-rejection-slips-offered-comments-like-“You-do-not-know-what-you-are-talking-about”" class="headerlink" title="A few rejection slips offered comments like “You do not know what you are talking about”."></a>A few rejection <strong>slips</strong> offered comments like “You do not know what you are talking about”.</h5><hr><h2 id="aware-of"><a href="#aware-of" class="headerlink" title="aware of"></a>aware of</h2><blockquote><p>意识到：知道某事或某情况的存在或发生。</p><p>She was aware of the danger of the situation.她意识到了这种情况的危险性。</p><p>aware &#x3D;&#x3D;&gt;<br>a-加强意义 + ware意识<br>前缀 a-同ad-. 词根ware, 看，见,留意，词源 同ward, 看。</p></blockquote><h2 id="prophetic"><a href="#prophetic" class="headerlink" title="prophetic"></a>prophetic</h2><blockquote><p><strong>&#x2F;prəˈfetɪk&#x2F;</strong></p><p>adj.预言的，预示的；先知的</p><p>prophetic预言的&#x3D;&#x3D;&gt;来自prophet,预言家。</p></blockquote><h2 id="prediction"><a href="#prediction" class="headerlink" title="prediction"></a>prediction</h2><blockquote><p><strong>&#x2F;prɪˈdɪkʃn&#x2F;</strong></p><p>n.预言之事，预报之事；预测（行为）</p><p>来自 predict  v.预言，预计，预卜。【pre: 前，预先； dict表示说】</p></blockquote><h5 id="Twenty-years-later-millions-of-people-around-the-world-are-more-aware-of-my-rich-dad’s-warnings-and-his-lessons-about-the-future-With-20-20-hindsight-many-have-said-that-his-lessons-were-prophetic…-predictions-come-true"><a href="#Twenty-years-later-millions-of-people-around-the-world-are-more-aware-of-my-rich-dad’s-warnings-and-his-lessons-about-the-future-With-20-20-hindsight-many-have-said-that-his-lessons-were-prophetic…-predictions-come-true" class="headerlink" title="Twenty years later, millions of people around the world are more aware of my rich dad’s warnings and his lessons about the future. With 20&#x2F;20 hindsight, many have said that his lessons were prophetic… predictions come true."></a>Twenty years later, millions of people around the world are more <strong>aware of</strong> my rich dad’s warnings and his lessons about the future. With 20&#x2F;20 hindsight, many have said that his lessons were <strong>prophetic</strong>… <strong>predictions</strong> come true.</h5><hr>]]></content>
    
    
    <categories>
      
      <category>English</category>
      
    </categories>
    
    
    <tags>
      
      <tag>RichDadPoorDad Hindsight</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>博客使用说明</title>
    <link href="/2023/12/20/hello-world/"/>
    <url>/2023/12/20/hello-world/</url>
    
    <content type="html"><![CDATA[<p>测试。git status….</p><p><a href="https://hexo.fluid-dev.com/docs/guide/">博客使用说明</a></p><p>使用 <a href="https://github.com/apps/utterances">utterances</a> 作为评论系统  <a href="https://www.jianshu.com/p/785d727810b3l">参考链接</a></p><p><img src="https://raw.githubusercontent.com/JackieDai/blogAssets/main/202312201801777.png"></p><p><img src="https://raw.githubusercontent.com/JackieDai/blogAssets/main/202312201802152.png"></p><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><p>[TOC]</p><h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>从上一个篇章，提到了<code>scheduleDAG</code> 这个方法比较重要，逻辑也相对复杂。接下来，我们抽丝剥茧，扒一扒内部到底是什么？首先先看外部调用</p><p><a href="file:///usr/local/Atlas/Documentation/atlas-groups/atlas-group-scheduler.html#scheduler-lifetime">先参考文档</a></p><blockquote><p>先解释下面代码中的dag 的意思</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs lua"><span class="hljs-keyword">local</span> dag = <span class="hljs-literal">nil</span><br><span class="hljs-keyword">if</span> <span class="hljs-built_in">next</span>(plugins) == <span class="hljs-literal">nil</span> <span class="hljs-keyword">then</span><br>    dag = Group.scheduler(deviceName)<br><span class="hljs-keyword">else</span><br>    dag = Group.scheduler(deviceName, plugins)<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><p>After the unit setup (device initialization and configuration), <strong>a scheduler(调度程序) is created to schedule(安排) actions to be executed</strong> within the device’s context. The code snippet below provides an example call to initialize the scheduler. **It’s important to note that only one scheduler can exist at a time per device.**（每个设备一次只能存在一个调度程序）</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lua">scheduler = Group.scheduler(device_name, plugin_table)<br></code></pre></td></tr></table></figure><p>由此可知 程序中<code>dag</code> 就是调度器。</p></blockquote><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs lua"><span class="hljs-comment">-- This function will schedule and execute the DAG. </span><br><span class="hljs-comment">-- It will use:</span><br><span class="hljs-comment">--deviceFT.scheduleDAG ;</span><br><span class="hljs-comment">--deviceFT.scheduleFinalDAG;</span><br><span class="hljs-comment">-- mergedPluginTable 包含 groupPlugin 和 devicePlugin</span><br><span class="hljs-comment">-- pluginNamesToUnmanageTable 在案例DEMO中，这个table == nil</span><br>gsmFT.executeTest = <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">(deviceFT, mergedPluginTable, pluginNamesToUnmanageTable)</span></span><br>    <span class="hljs-keyword">local</span> prevDAGResults = <span class="hljs-literal">nil</span><br>    <span class="hljs-keyword">local</span> iter = <span class="hljs-number">1</span><br>      <br>  <span class="hljs-comment">-- 是否结束每个Device的调度器，模式为false,表示不终结。每个Device一次只能有一个调度器</span><br>    <span class="hljs-keyword">local</span> isFinalDAGScheduledPerDevice = &#123;&#125;<br>  <span class="hljs-comment">-- 将isFinalDAGScheduledPerDevice 根据  Group.allDevices() ,以deviceName 为 key ,value 全部设置为 false</span><br>    <span class="hljs-keyword">for</span> _,deviceName <span class="hljs-keyword">in</span> <span class="hljs-built_in">ipairs</span>(Group.allDevices()) <span class="hljs-keyword">do</span> isFinalDAGScheduledPerDevice[deviceName] = <span class="hljs-literal">false</span> <span class="hljs-keyword">end</span><br>  <br><br>    <span class="hljs-keyword">repeat</span><br>        <span class="hljs-keyword">for</span> _,deviceName <span class="hljs-keyword">in</span> <span class="hljs-built_in">ipairs</span>(Group.allDevices()) <span class="hljs-keyword">do</span><br>      <span class="hljs-comment">-- 这里是一定会执行的</span><br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> isFinalDAGScheduledPerDevice[deviceName] <span class="hljs-keyword">then</span><br>        <span class="hljs-comment">-- 根据 deviceName 获取 Device 所有的插件</span><br>                <span class="hljs-keyword">local</span> plugins = mergedPluginTable[deviceName]<br>        <br>        <span class="hljs-comment">-- 这里dag 其实就是调度程序（scheduler）的意思</span><br>                <span class="hljs-keyword">local</span> dag = <span class="hljs-literal">nil</span><br>                <span class="hljs-keyword">if</span> <span class="hljs-built_in">next</span>(plugins) == <span class="hljs-literal">nil</span> <span class="hljs-keyword">then</span><br>                    dag = Group.scheduler(deviceName)<br>                <span class="hljs-keyword">else</span><br>                    dag = Group.scheduler(deviceName, plugins)<br>                <span class="hljs-keyword">end</span><br><br>        <span class="hljs-comment">-- 传入 参数，调用 自定义的scheduleDAG书写逻辑，来实现 任务调度，这里会有一个返回值，来标记调度状态[也即是绑定action是否成功]</span><br>                <span class="hljs-keyword">local</span> isDAGScheduled = deviceFT.scheduleDAG(iter, dag, deviceName, plugins, prevDAGResults)<br>        <br>                <span class="hljs-keyword">if</span> isDAGScheduled == <span class="hljs-literal">false</span> <span class="hljs-keyword">then</span><br>          <span class="hljs-comment">-- 如果安排调度事件失败那么结束</span><br>                    deviceFT.scheduleFinalDAG(dag, deviceName, plugins)<br>          <span class="hljs-comment">-- 标记结束调度设备</span><br>                    isFinalDAGScheduledPerDevice[deviceName] = <span class="hljs-literal">true</span><br>                <span class="hljs-keyword">end</span><br>            <span class="hljs-keyword">end</span><br>        <span class="hljs-keyword">end</span><br><br>    <span class="hljs-comment">-- 请求Group执行任务</span><br>        prevDAGResults = Group.<span class="hljs-built_in">execute</span>()<br><br>    <span class="hljs-comment">-- 要自增，在下一次循环的时候，需要作为 参数传递</span><br>        iter = iter + <span class="hljs-number">1</span><br>    <br>        <span class="hljs-keyword">local</span> allFinalDAGScheduled = <span class="hljs-literal">true</span><br>        <span class="hljs-keyword">for</span> _,isFinalDAGScheduled <span class="hljs-keyword">in</span> <span class="hljs-built_in">pairs</span>(isFinalDAGScheduledPerDevice) <span class="hljs-keyword">do</span><br>            allFinalDAGScheduled = allFinalDAGScheduled <span class="hljs-keyword">and</span> isFinalDAGScheduled<br>        <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">until</span> allFinalDAGScheduled<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><p>从上面的代码能够看出，循环体中的结束条件 <code>allFinalDAGScheduled</code> ,但是这个条件取决于<code>deviceFT.scheduleDAG()</code> 方法的返回值。</p><h1 id="ScheduleDAG"><a href="#ScheduleDAG" class="headerlink" title="ScheduleDAG"></a>ScheduleDAG</h1><p>内部源码如下:</p><blockquote><p>DEMO示例的代码中</p><ul><li>iter &#x3D;&#x3D; 1 表示调度 init</li><li>iter &#x3D;&#x3D; 2 表示调度main, 【不过在调度main之前要先校验 init 是否成功】</li></ul><p>同时 返回值 如果 是 <code>true</code> 表示外界调度的函数要继续循环，如果是返回<code>false</code> 表示外界调度的循环体还要继续执行</p></blockquote><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs lua"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">scheduleDAG</span><span class="hljs-params">(iter, dag, deviceName, mergedPluginTable, prevDAGResults)</span></span><br>    Log.LogInfo(<span class="hljs-string">&quot;lingxiao---scheduleDAG&quot;</span>)<br><br>  <span class="hljs-comment">-- enable am i ok check for Init and Main.csv, but not Teardown.csv.</span><br>  <span class="hljs-keyword">if</span> iter == <span class="hljs-number">1</span> <span class="hljs-keyword">then</span><br>    <span class="hljs-comment">-- enable amiok for Init.csv</span><br>    <span class="hljs-comment">-- dag.enableExitOnAmIOkay()</span><br>    <span class="hljs-comment">-- initialize for current test cycle</span><br>    prevGlobals[deviceName] = comFunc.clone(initGlobals)<br>    prevConditions[deviceName] = comFunc.clone(initConditions)<br><br>    <span class="hljs-keyword">if</span> additionalGlobals[deviceName] <span class="hljs-keyword">then</span><br>        <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> <span class="hljs-built_in">pairs</span>(additionalGlobals[deviceName]) <span class="hljs-keyword">do</span><br>            prevGlobals[deviceName][k] = v<br>        <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">end</span><br><br>    <span class="hljs-keyword">local</span> globals = prevGlobals[deviceName]<br>    <span class="hljs-keyword">local</span> conditions = prevConditions[deviceName]<br>    lastResolvableByDevice[deviceName] = runTests(currentInitTests, limits, globals,<br>                                                  conditions, <span class="hljs-string">&#x27;Init&#x27;</span>, dag, deviceName,<br>                                                  testNames[deviceName], mergedPluginTable)<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>  <span class="hljs-keyword">elseif</span> iter == <span class="hljs-number">2</span> <span class="hljs-keyword">then</span><br>    <span class="hljs-comment">-- enable amiok for Main.csv</span><br>    <span class="hljs-comment">-- dag.enableExitOnAmIOkay()</span><br>    <span class="hljs-comment">-- check result for Init.csv</span><br>    <span class="hljs-keyword">local</span> prevDAGFinished = checkDAGSuccessful(<span class="hljs-string">&#x27;Init&#x27;</span>, deviceName, prevDAGResults)<br>    <span class="hljs-keyword">if</span> prevDAGFinished == <span class="hljs-literal">true</span> <span class="hljs-keyword">then</span><br>        <span class="hljs-keyword">local</span> lastResolvable = lastResolvableByDevice[deviceName]<br>        <span class="hljs-keyword">if</span> lastResolvable <span class="hljs-keyword">then</span><br>            <span class="hljs-keyword">local</span> result = lastResolvable.overallResult()<br>            <span class="hljs-keyword">if</span> result == Group.overallResult.fail <span class="hljs-keyword">then</span><br>                Log.LogError(<span class="hljs-string">&#x27;Init.csv fails; skipping Main.csv and running Teardown.csv&#x27;</span>)<br>                <span class="hljs-comment">-- do not run Main.csv if Init.csv fails.</span><br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>            <span class="hljs-keyword">end</span><br>        <span class="hljs-keyword">end</span><br><br>        <span class="hljs-keyword">local</span> globals = prevGlobals[deviceName]<br>        <span class="hljs-keyword">local</span> conditions = prevConditions[deviceName]<br>        lastResolvableByDevice[deviceName] = runTests(currentMainTests, limits, globals,<br>                                                      conditions, <span class="hljs-string">&#x27;Main&#x27;</span>, dag, deviceName,<br>                                                      testNames[deviceName], mergedPluginTable)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-comment">-- do nothing here; already handled in checkDAGSuccessful</span><br>        <span class="hljs-comment">-- skip Main.csv, so return false to go to Teardown.csv</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>    <span class="hljs-keyword">end</span><br>  <span class="hljs-keyword">else</span><br>    <span class="hljs-comment">-- Do not enable amiok for Teardown.csv</span><br>    <span class="hljs-comment">-- check result for Main.csv</span><br>    checkDAGSuccessful(<span class="hljs-string">&#x27;Main&#x27;</span>, deviceName, prevDAGResults)<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>  <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h2><p>@lingxiao</p><p>analyse run test 方法</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
